module.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t){function r(e,t){var r=e.split("."),n={};return 0==r.length&&(n[e]=t),r.reverse().forEach(function(e){if(-1==e.indexOf("["))n[e]=t;else{var r={};r[e.split("[")[0]]=[n],n=r}}),n}e.exports=function(e,t){const n={},o=t.prettier,i=t._,l={},s={};let a={};var c=`${function e(t){var n="";if(t.length&&"string"!=typeof t)t.forEach(function(t){n+=e(t)});else{if("object"!=typeof t)return t.toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;");var o=t.componentType,c=t.attrs.className;switch(o){case"text":var u,p=t.style.lines;t.tpl?(u=`{dataSource.${t.tpl}}`,a=i.merge(a,r(t.tpl,t.innerText))):u=t.innerText,n+=`<Text style={styles.${c}} numberOfLines={${p}}>${u}</Text>`,l[o]||(l[o]="import Text from 'rax-text';"),1==t.style.lines&&(delete t.style.width,delete t.style.height),delete t.style.fontFamily,delete t.style.lines;break;case"view":t.children&&t.children.length>0?n+=`<View style={styles.${c}}>${e(t.children)}</View>`:n+=`<View style={styles.${c}} />`,l[o]||(l[o]="import View from 'rax-view';");break;case"picture":var f;t.tpl?(f=`dataSource.${t.tpl}`,a=i.merge(a,r(t.tpl,t.attrs.src))):f=`'${t.attrs.src}'`,n+=`<Picture resizeMod={'contain'} style={styles.${c}} source={{uri: ${f}}} />`,l[o]||(l[o]="import Picture from 'rax-picture';")}s[c]=t.style}return n}(e)}`,u=Object.keys(a).length>0?"var dataSource = this.props.dataSource;":"";n.modClass=`\n    class Mod extends Component {\n      render() {\n        ${u}\n        return (\n          ${c}\n        );\n      }\n    }\n  `,n.import=Object.keys(l).map(e=>l[e]).join("\n"),n.mockData=`var mock = ${JSON.stringify(a)}`,n.style=`var styles = ${JSON.stringify(s)}`,n.export="render(<Mod dataSource={mock} />);";const p={printWidth:120,singleQuote:!0},f=o.format(n.style,p);return{renderData:n,xml:o.format(c,p),style:f,prettierOpt:p}}}]);